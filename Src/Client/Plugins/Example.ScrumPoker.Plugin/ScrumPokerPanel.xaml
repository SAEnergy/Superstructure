<base:PanelBase 
    x:Class="Example.ScrumPoker.Plugin.ScrumPokerPanel"
    xmlns:base="clr-namespace:Client.Base;assembly=Client.Base"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:Example.ScrumPoker.Plugin"
    mc:Ignorable="d" 
    Background="Transparent"
    >
    <base:PanelBase.Resources>
        <VisualBrush x:Key="CardBackBrush" TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute" Viewbox="0,0,10,10" ViewboxUnits="Absolute">
            <VisualBrush.Visual>
                <Grid>
                    <Path Data="M 0 10 L 10 0" Stroke="Gray" />
                    <Path Data="M 0 0 L 10 10" Stroke="Gray" />
                </Grid>
            </VisualBrush.Visual>
        </VisualBrush>
        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Margin" Value="4"/>
        </Style>
        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Margin" Value="4"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
    </base:PanelBase.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Border BorderThickness="0" Background="White" Opacity="1" Margin="0" Grid.Row="0" Grid.RowSpan="3" Grid.ColumnSpan="99"/>
        <Border BorderThickness="0" Background="White" Opacity="1" Margin="0" Grid.Row="4" Grid.ColumnSpan="99"/>
        <Border BorderThickness="0" Background="White" Opacity="1" Margin="0" Grid.Row="6" Grid.ColumnSpan="99"/>
        <Border BorderThickness="0" Background="White" Opacity="1" Margin="0" Grid.Row="8" Grid.ColumnSpan="99"/>
        <Label Grid.Row="0">Story Name:</Label>
        <Label Grid.Row="1">Player Name:</Label>
        <Label Grid.Row="2">Card Color:</Label>
        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Path=Story.Name, UpdateSourceTrigger=PropertyChanged, Delay=1000,Mode=TwoWay}"/>
        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Source={x:Static base:ClientSettingsEngine.Instance}, Path=.[ScrumPokerSettings].PlayerName, UpdateSourceTrigger=PropertyChanged, Delay=1000,Mode=TwoWay}"/>
        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
            <TextBox Text="{Binding Source={x:Static base:ClientSettingsEngine.Instance}, Path=.[ScrumPokerSettings].ColorRed, UpdateSourceTrigger=PropertyChanged, Delay=500,Mode=TwoWay}"/>
            <TextBox Text="{Binding Source={x:Static base:ClientSettingsEngine.Instance}, Path=.[ScrumPokerSettings].ColorGreen, UpdateSourceTrigger=PropertyChanged, Delay=500,Mode=TwoWay}"/>
            <TextBox Text="{Binding Source={x:Static base:ClientSettingsEngine.Instance}, Path=.[ScrumPokerSettings].ColorBlue, UpdateSourceTrigger=PropertyChanged, Delay=500,Mode=TwoWay}"/>
        </StackPanel>
        <StackPanel Grid.Row="4" Grid.ColumnSpan="99" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Command="{Binding Path=ResetGameCommand}">Reset Game</Button>
            <Button Command="{Binding Path=FlipCardsCommand}">Flip Cards</Button>
        </StackPanel>
        <ScrollViewer Grid.Row="6"  Grid.ColumnSpan="99">
            <ItemsControl ItemsSource="{Binding Players}" VerticalAlignment="Center" HorizontalAlignment="Center">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <Grid>
                                <!-- background first -->
                                <Rectangle RadiusX="8" RadiusY="8" StrokeThickness="0" Margin="4" >
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Setter Property="Fill" Value="{Binding BackgroundBrush}"/>
                                            <Setter Property="Opacity" Value="0.33"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=OriginalObject.HasVoted}" Value="False">
                                                    <Setter Property="Fill" Value="Transparent"/>
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=OriginalObject.HasVoted}" Value="True"/>
                                                        <Condition Binding="{Binding Path=OriginalObject.SelectedCard}" Value="{x:Null}"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Opacity" Value="1"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>

                                <!-- card back overlay -->
                                <Rectangle RadiusX="8" RadiusY="8" StrokeThickness="0" Margin="4" Fill="{StaticResource CardBackBrush}">
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=OriginalObject.HasVoted}" Value="True"/>
                                                        <Condition Binding="{Binding Path=OriginalObject.SelectedCard}" Value="{x:Null}"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>

                                <!-- border brush -->
                                <Rectangle RadiusX="8" RadiusY="8" Stroke="Black" StrokeThickness="3" Margin="4" >
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Setter Property="StrokeDashArray" Value=""/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=OriginalObject.HasVoted}" Value="False">
                                                    <Setter Property="StrokeDashArray" Value="2 2"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>


                                <Viewbox Width="100" Height="150" Stretch="Uniform" Margin="4">
                                    <TextBlock Text="{Binding Path=SelectedCard.DisplayName}" FontWeight="Bold" FontSize="100" Padding="0" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Viewbox>
                            </Grid>
                            <Viewbox Width="100" Height="25" Stretch="Uniform" Margin="4">
                                <TextBlock Text="{Binding Path=Name}" Padding="0" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Viewbox>
                            <!--<TextBlock Text="{Binding Path=OriginalObject.HasVoted}"/>
                        <TextBlock Text="{Binding Path=SelectedCard.DisplayName}"/>-->
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>
        <ListBox Grid.Row="8" Grid.ColumnSpan="99" BorderThickness="0" ItemsSource="{Binding Path=AvailableCards}" SelectedValue="{Binding Path=Me.SelectedCard,Mode=TwoWay}" IsSynchronizedWithCurrentItem="True">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding AvailableCards.Count}"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding DisplayName}" Padding="0,10" Margin="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ListBox>
    </Grid>
</base:PanelBase>
